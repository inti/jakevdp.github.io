import zipfile
import numpy as np
from matplotlib import pyplot as plt
from matplotlib.colors import ListedColormap


class NESGraphics(object):
    """Class interface for stripping graphics from an NES ROM"""
    def __init__(self, filename='mario_ROM.zip', offset=2049):
        self.offset = offset
        if zipfile.is_zipfile(filename):
            zp = zipfile.ZipFile(filename)
            data = np.unpackbits(np.frombuffer(zp.read(zp.filelist[0]),
                                               dtype=np.uint8))
        else:
            data = np.unpackbits(np.fromfile(filename, dtype=np.uint8))
        self.data = data.reshape((-1, 8, 8))

    def generate_image(self, A, C=None, transparent=False):
        A = np.asarray(A)
        if C is None:
            C = range(4)

        # broadcast C to the shape of A
        C = np.asarray(C) + np.zeros(A.shape + (1,))

        im = np.zeros((8 * A.shape[0], 8 * A.shape[1]))
        for i in range(A.shape[0]):
            for j in range(A.shape[1]):
                ind = 2 * (abs(A[i, j]) + self.offset)
                thumb = self.data[ind] + 2 * self.data[ind + 1]
                thumb = C[i, j, thumb]
                if A[i, j] < 0:
                    thumb = thumb[:, ::-1]
                im[8 * i:8 * (i + 1), 8 * j:8 * (j + 1)] = thumb
        if transparent:
            im = np.ma.masked_equal(im, 0)

        return im


def draw_graphics():
    NG = NESGraphics()
    cmap = ListedColormap(['white', 'red', 'orange', 'brown'])
    
    im = 252 + np.zeros((17, 19))
    im[1:5, 1:3] = [[0, 1], [2, 3], [4, 5], [6, 7]]
    im[1:5, 4:6] = [[8, 9], [10, 11], [12, 13], [14, 15]]
    im[1:5, 7:9] = [[16, 17], [18, 19], [20, 21], [22, 23]]
    im[1:5, 10:12] = [[24, 25], [26, 27], [28, 29], [30, 31]]
    im[1:5, 13:15] = [[32, 33], [34, 35], [36, 37], [38, 39]]
    im[1:5, 16:18] = [[0, 1], [76, 77], [74, -74], [75, -75]]

    im[9:13, 1:3] = [[8, 9], [40, 41], [42, 43], [44, 45]]
    im[9:13, 4:6] = [[8, 9], [10, 11], [12, 48], [49, 45]]
    im[9:13, 7:9] = [[8, 9], [10, 11], [46, 47], [49, 45]]
    im[9:13, 10:12] = [[8, 9], [10, 11], [12, 48], [92, 93]]
    im[9:13, 13:15] = [[8, 9], [10, 11], [12, 48], [94, 95]]
    im[9:13, 16:18] = [[252, 252], [8, 9], [88, 89], [90, -90]]

    im[6:8, 1:3] = [[54, 55], [56, 57]]
    im[6:8, 4:6] = [[50, 51], [52, 53]]
    im[6:8, 7:9] = [[58, 55], [59, 60]]
    im[6:8, 10:12] = [[61, 62], [63, 64]]
    im[6:8, 13:15] = [[50, 65], [66, 67]]
    im[6:8, 16:18] = [[58, 55], [79, -79]]

    im[14:16, 1:3] = [[50, 51], [68, 69]]
    im[14:16, 4:6] = [[50, 51], [70, 71]]
    im[14:16, 7:9] = [[50, 51], [72, 73]]
    im[14:16, 10:12] = [[50, 51], [144, 145]]
    im[14:16, 13:15] = [[58, 55], [146, 147]]
    im[14:16, 16:18] = [[158, -158], [159, -159]]

    im = NG.generate_image(im)
    
    fig = plt.figure(figsize=(6, 6 * 17. / 19.))
    ax = fig.add_axes((0, 0, 1, 1), xticks=[], yticks=[])
    ax.imshow(im, cmap=cmap, interpolation='nearest', clim=(0, 3))

if __name__ == '__main__':
    draw_graphics()
    plt.show()
